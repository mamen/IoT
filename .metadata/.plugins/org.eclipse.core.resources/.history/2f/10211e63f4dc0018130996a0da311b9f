#include <msp430.h>
#include "led.h"

volatile int numSeconds = 0;

#pragma vector = TIMER1_A1_VECTOR
__interrupt void TimerA1_ISR (void) {
    numSeconds++;

    if(numSeconds >= 1000) {
        led_toggleLED(LED_RED, LED_MODE_OFF);
    }
}




void led_init() {
    P1DIR |= BIT0;
    P9DIR |= BIT7;

    // timer
    TA1CCTL0 = CCIE + CAP;                      // Timer1_A3
    TA1CCR0 = 1000;                       // Count to 16000 , 16000*0.125us = 2ms
    TA1CTL = TASSEL_2 + MC_1 + TAIE;        // Timer MC = 1, TAIE = 1, TASSEL = 2

    _enable_interrupt();
}


void led_toggleLED(int ledNum, int mode) {
    switch(mode) {
        // off
        case 0:
            if(ledNum == 1)
                P1OUT &= ~LED_RED;
            else
                P9OUT &= ~LED_GREEN;
            break;
        // on
        case 1:
            if(ledNum == 1)
                P1OUT |= LED_RED;
            else
                P9OUT |= LED_GREEN;
            break;
        // toggle
        case 2:
            if(ledNum == 1)
                P1OUT ^= LED_RED;
            else
                P9OUT ^= LED_GREEN;
            break;
        // blink
        case 3:
            if(ledNum == 1)
                P1OUT ^= LED_RED;
            else
                P9OUT ^= LED_GREEN;
            break;

    }
}
